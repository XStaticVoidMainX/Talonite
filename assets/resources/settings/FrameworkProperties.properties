# Framework Properties

###########################
#                         #
# SceneManager properties #
#                         #
###########################

#sceneManager.scenesFolder
# - Path to the folder containing the scene files. Absolute path, or relative to the classpath.
# - Leave this property empty if the sceneManager.scenes contains the relative/absolute path to the file in addition to the short file name for each scene name.
# - This path will get prefixed to each scene name in the code, so make sure to leave this empty if you specify long file paths in sceneManager.scenes.
sceneManager.scenesFolder=resources/scenes

#sceneManager.scenes
# - Comma-separated list of scene file names. Can be short file name only, or contain the absolute/relative path to the file. Leave no spaces between the files and the commas, unless the file path actually contains spaces.
# - You can mix and match short file names and long file names in the comma-separated list, but if you have at least one long path in the list, consider leaving the sceneManager.scenesFolder property empty!
# - The order of the file names will specify the index of the scene in the list managed by the code. If you have at least one file here, only the files here listed will be used.
# - If you leave this property empty and sceneManager.scenesFolder is not empty, all files in that directory will be loaded, but they will not be indexed - therefore you will need to manage the file indexes yourself! In this case the scenes will be indexed by file name.
sceneManager.scenes=Main.fxml,HostGame.fxml,JoinGame.fxml,Chat.fxml

#sceneManager.stylesheetsFolder
# - Path to the folder containing the stylesheet files. Absolute path, or relative to the classpath.
# - Leave this property empty if the sceneManager.stylesheets contains the relative/absolute path to the file in addition to the short file name for each stylesheet name.
# - This path will get prefixed to each stylesheet name in the code, so make sure to leave this empty if you specify long file paths in sceneManager.stylesheets.
#sceneManager.stylesheetsFolder=resources/css

#sceneManager.stylesheets
# - Comma-separated list of stylesheet file names. Can be short file name only, or contain the absolute/relative path to the file. Leave no spaces between the files and the commas, unless the file path actually contains spaces.
# - You can mix and match short file names and long file names in the comma-separated list, but if you have at least one long path in the list, consider leaving the sceneManager.stylesheetsFolder property empty!
# - The order of the file names will specify the index of the stylesheet in the list managed by the code. If you have at least one file here, only the files here listed will be used.
# - If you leave this property empty and sceneManager.stylesheetsFolder is not empty, all files in that directory will be loaded, but they will not be indexed - therefore you will need to manage the file indexes yourself! In this case the stylesheets will be indexed by file name.
sceneManager.stylesheets=resources/css/application.css

############################
#                          #
# SocketSession properties #
#                          #
############################




###################################
#                                 #
# SessionVariables Default Values #
#                                 #
###################################

# Any custom default values you want to load should be entered here.
# You will have to handle copying the values from the properties file into the session variables map by calling BaseFramework.copyPropertiesToSession.
# These are default values that are inserted into the session variables map at framework initialization.

session.userName=Player
session.socketSession.host=127.0.0.1
session.socketSession.port=12345
